--TRIGGERS
CREATE OR REPLACE TRIGGER INSERTAR_AGUALUZ_OID
BEFORE INSERT ON AGUALUZ
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT INCRE_OIDAL.NEXTVAL INTO :NEW.OIDAL FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER INSERTAR_TAPA_OID
BEFORE INSERT ON TAPAS
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT INCRE_OIDTAP.NEXTVAL INTO :NEW.OIDTAP FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER INSERTAR_TAPA_OID
BEFORE INSERT ON TAPAS
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT INCRE_OIDTAP.NEXTVAL INTO :NEW.OIDTAP FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER INSERTAR_BEBIDA_OID
BEFORE INSERT ON BEBIDAS
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT INCRE_OIDBEB.NEXTVAL INTO :NEW.OIDBEB FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER INSERTAR_PRODUCTO_OID
BEFORE INSERT ON PRODUCTOS
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT INCRE_OIDPROD.NEXTVAL INTO :NEW.OIDPROD FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER INSERTAR_PEDIDO_OID
BEFORE INSERT ON LINEASPEDIDO
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT INCRE_OIDLP.NEXTVAL INTO :NEW.OIDLP FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER INSERTAR_EMPLEADO_OID
BEFORE INSERT ON EMPLEADOS
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT INCRE_OIDEMP.NEXTVAL INTO :NEW.OIDEMP FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER INSERTAR_USUARIO_OID
BEFORE INSERT ON USUARIOS
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT INCRE_OIDUSUARIO.NEXTVAL INTO :NEW.OID_USUARIO FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER INSERTAR_PROVEEDOR_OID
BEFORE INSERT ON PROVEEDORES
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT INCRE_OIDPROV.NEXTVAL INTO :NEW.OID_PROV FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER INSERTAR_RESERVA_OID
BEFORE INSERT ON RESERVAS
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT INCRE_OIDRES.NEXTVAL INTO :NEW.OIDRES FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER INSERTAR_CUENTA_OID
BEFORE INSERT ON LINEASCUENTA
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
  SELECT INCRE_OIDLC.NEXTVAL INTO :NEW.OIDLC FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER GENERA_PK_PROV
BEFORE INSERT ON PROVEEDORES
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDPROV.NEXTVAL INTO :NEW.OID_PROV FROM DUAL;
END;
/


CREATE OR REPLACE TRIGGER GENERA_PK_PRODUCTOS
BEFORE INSERT ON PRODUCTOS
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDPROD.NEXTVAL INTO :NEW.OIDPROD FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER GENERA_PK_BAJODEMANDA
BEFORE INSERT ON BAJODEMANDA
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDBD.NEXTVAL INTO :NEW.OIDBD FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER GENERA_PK_PERIODICOS
BEFORE INSERT ON PERIODICOS
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDPER.NEXTVAL INTO :NEW.OIDPER FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER GENERA_PK_LINEASPEDIDO
BEFORE INSERT ON LINEASPEDIDO
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDLP.NEXTVAL INTO :NEW.OIDLP FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER GENERA_PK_EJEMPLARES
BEFORE INSERT ON EJEMPLARES
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDEJ.NEXTVAL INTO :NEW.OIDEJ FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER GENERA_PK_BEBIDAS
BEFORE INSERT ON BEBIDAS
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDBEB.NEXTVAL INTO :NEW.OIDBEB FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER GENERA_PK_TAPAS
BEFORE INSERT ON TAPAS
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDTAP.NEXTVAL INTO :NEW.OIDTAP FROM DUAL;
END;
/


CREATE OR REPLACE TRIGGER GENERA_PK_RESERVAS
BEFORE INSERT ON RESERVAS
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDRES.NEXTVAL INTO :NEW.OIDRES FROM DUAL;
END;
/


CREATE OR REPLACE TRIGGER GENERA_PK_FORMAS
BEFORE INSERT ON FORMAS
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDF.NEXTVAL INTO :NEW.OIDF FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER GENERA_PK_LINEASCUENTA
BEFORE INSERT ON LINEASCUENTA
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDLC.NEXTVAL INTO :NEW.OIDLC FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER GENERA_PK_LOCALES
BEFORE INSERT ON LOCALES
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDLOC.NEXTVAL INTO :NEW.OIDLOC FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER GENERA_PK_MESAS
BEFORE INSERT ON MESAS
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDMES.NEXTVAL INTO :NEW.OIDMES FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER GENERA_PK_PUEDENTENER
BEFORE INSERT ON PUEDENTENER
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDPT.NEXTVAL INTO :NEW.OIDPT FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER GENERA_PK_LUZ
BEFORE INSERT ON LUZ
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDL.NEXTVAL INTO :NEW.OIDL FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER GENERA_PK_AGUA
BEFORE INSERT ON AGUA
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDA.NEXTVAL INTO :NEW.OIDA FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER GENERA_PK_EMPLEADOS
BEFORE INSERT ON EMPLEADOS
FOR EACH ROW
BEGIN
	SELECT INCRE_OIDEMP.NEXTVAL INTO :NEW.OIDEMP FROM DUAL;
END;
/

--RN-1.1
CREATE OR REPLACE TRIGGER TR_Empleado_Edad
BEFORE INSERT OR UPDATE OF FechaNacimiento ON Empleados
FOR EACH ROW
DECLARE
    anos NUMBER;
BEGIN
	anos := (SYSDATE - :NEW.FechaNacimiento) / 365.25;
		IF(anos < 16)
			THEN raise_application_error
			(-20010, 'El empleado tiene que tener al menos 16 aÃ±os');
		END IF;
END;
/

--RN-1.2
CREATE OR REPLACE TRIGGER TR_Fecha_Caducidad
    BEFORE INSERT OR UPDATE ON Ejemplares
        FOR EACH ROW
DECLARE
    FechaCaducidad DATE;
BEGIN
SELECT FechaCaducidad INTO FechaCaducidad FROM Ejemplares WHERE FechaCaducidad =:NEW.FechaCaducidad;
    IF(FechaCaducidad > SYSDATE)
THEN raise_application_error
    (-20010, 'El producto esta caducado');
    END IF;
END;
/






